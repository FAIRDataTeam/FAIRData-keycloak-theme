name: "Build"

on:
  push:
  pull_request:

jobs:

  maven:
    name: Maven package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: |
          mvn --batch-mode --update-snapshots package

      - name: Upload package as artifact
        uses: actions/upload-artifact@v3
        with:
          name: fairdata-keycloak-theme
          path: target/fairdata-keycloak-theme.jar
          retention-days: 5

  docker:
    name: Docker image
    needs: [maven]
    runs-on: ubuntu-latest

    env:
      PUBLIC_IMAGE: fairdata/fairdata-keycloak
      PRIVATE_IMAGE: ${{ secrets.PRIVATE_REGISTRY_URL }}/fairdata-keycloak
      PRIVATE_REGISTRY_URL: ${{ secrets.PRIVATE_REGISTRY_URL }}
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Check available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Download package artifact
        uses: actions/download-artifact@v3
        with:
          name: fairdata-keycloak-theme
          path: target

      - name: Check JAR package
        run: |
          ls -la ./target/fairdata-keycloak-theme.jar

      - name: Docker meta [test]
        id: meta-test
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.PUBLIC_IMAGE }}
          tags: |
            type=sha

      - name: Docker build+push [test]
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ${{ steps.meta-test.outputs.tags }}
          labels: ${{ steps.meta-test.outputs.labels }}

      # PRIVATE: DOCKER REGISTRY
      - name: Docker login [private]
        if: github.event_name == 'push' && env.PRIVATE_REGISTRY_URL != ''
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.PRIVATE_REGISTRY_URL }}
          username: ${{ secrets.PRIVATE_REGISTRY_USERNAME }}
          password: ${{ secrets.PRIVATE_REGISTRY_PASSWORD }}

      - name: Docker meta [private]
        id: meta-private
        if: github.event_name == 'push' && env.PRIVATE_REGISTRY_URL != ''
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.PRIVATE_IMAGE }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
      - name: Docker build+push [private]
        uses: docker/build-push-action@v3
        if: github.event_name == 'push' && env.PRIVATE_REGISTRY_URL != '' && steps.meta-private.outputs.tags != ''
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-private.outputs.tags }}
          labels: ${{ steps.meta-private.outputs.labels }}

      # PUBLIC: DOCKER HUB
      - name: Docker login [public]
        if: github.event_name == 'push' && env.DOCKER_HUB_USERNAME != ''
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Docker meta [public]
        id: meta-public
        if: github.event_name == 'push' && env.DOCKER_HUB_USERNAME != ''
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.PUBLIC_IMAGE }}
          tags: |
            type=raw,value=develop,enable=${{ github.ref == format('refs/heads/{0}', 'develop') }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
      - name: Docker build+push [public]
        uses: docker/build-push-action@v3
        if: github.event_name == 'push' && env.DOCKER_HUB_USERNAME != '' && steps.meta-public.outputs.tags != ''
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-public.outputs.tags }}
          labels: ${{ steps.meta-public.outputs.labels }}
